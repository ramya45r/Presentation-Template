{"ast":null,"code":"var _jsxFileName = \"C:\\\\uplo\\\\src\\\\components\\\\PythonCompilerSlide.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Slide from './Slide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadBrython = callback => {\n  const script = document.createElement('script');\n  script.src = 'https://cdn.jsdelivr.net/npm/brython@3.11.0/brython.min.js';\n  script.onload = () => {\n    if (window.brython) {\n      callback();\n    } else {\n      console.error('Brython failed to load.');\n    }\n  };\n  document.body.appendChild(script);\n};\nconst runPython = (code, outputRef) => {\n  if (!window.brython) {\n    console.error('Brython is not loaded.');\n    return;\n  }\n  try {\n    // Create a new script element for the Python code\n    const script = document.createElement('script');\n    script.type = 'text/python';\n    script.text = code;\n\n    // Append the script to the body to be executed\n    document.body.appendChild(script);\n\n    // Optionally, you can remove the script after execution if needed\n    document.body.removeChild(script);\n  } catch (err) {\n    console.error('Error running Python code:', err);\n    outputRef.current.innerText = `Error: ${err.message}`;\n  }\n};\nconst PythonCompilerSlide = () => {\n  _s();\n  const outputRef = useRef();\n  const [brythonLoaded, setBrythonLoaded] = useState(false);\n  useEffect(() => {\n    loadBrython(() => {\n      console.log('Brython loaded');\n      setBrythonLoaded(true);\n      window.brython(); // Initialize Brython\n    });\n  }, []);\n  const handleRunClick = () => {\n    if (!brythonLoaded) {\n      console.error('Brython is not loaded yet.');\n      return;\n    }\n    const code = document.getElementById(\"python-code\").value;\n    console.log(code, 'code');\n    outputRef.current.innerText = '';\n    runPython(code, outputRef);\n  };\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    className: \"python-compiler-slide\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"python-code\",\n      defaultValue: \"print('Hello, World!')\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRunClick,\n      children: \"Run Python Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      ref: outputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"mycanvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(PythonCompilerSlide, \"h7aUlluMz6dHviQQeJSAAqNTtIw=\");\n_c = PythonCompilerSlide;\nexport default PythonCompilerSlide;\nvar _c;\n$RefreshReg$(_c, \"PythonCompilerSlide\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Slide","jsxDEV","_jsxDEV","loadBrython","callback","script","document","createElement","src","onload","window","brython","console","error","body","appendChild","runPython","code","outputRef","type","text","removeChild","err","current","innerText","message","PythonCompilerSlide","_s","brythonLoaded","setBrythonLoaded","log","handleRunClick","getElementById","value","className","children","id","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","_c","$RefreshReg$"],"sources":["C:/uplo/src/components/PythonCompilerSlide.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Slide from './Slide';\r\n\r\nconst loadBrython = (callback) => {\r\n  const script = document.createElement('script');\r\n  script.src = 'https://cdn.jsdelivr.net/npm/brython@3.11.0/brython.min.js';\r\n  script.onload = () => {\r\n    if (window.brython) {\r\n      callback();\r\n    } else {\r\n      console.error('Brython failed to load.');\r\n    }\r\n  };\r\n  document.body.appendChild(script);\r\n};\r\n\r\nconst runPython = (code, outputRef) => {\r\n  if (!window.brython) {\r\n    console.error('Brython is not loaded.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Create a new script element for the Python code\r\n    const script = document.createElement('script');\r\n    script.type = 'text/python';\r\n    script.text = code;\r\n\r\n    // Append the script to the body to be executed\r\n    document.body.appendChild(script);\r\n\r\n    // Optionally, you can remove the script after execution if needed\r\n    document.body.removeChild(script);\r\n  } catch (err) {\r\n    console.error('Error running Python code:', err);\r\n    outputRef.current.innerText = `Error: ${err.message}`;\r\n  }\r\n};\r\n\r\nconst PythonCompilerSlide = () => {\r\n  const outputRef = useRef();\r\n  const [brythonLoaded, setBrythonLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadBrython(() => {\r\n      console.log('Brython loaded');\r\n      setBrythonLoaded(true);\r\n      window.brython(); // Initialize Brython\r\n    });\r\n  }, []);\r\n\r\n  const handleRunClick = () => {\r\n    if (!brythonLoaded) {\r\n      console.error('Brython is not loaded yet.');\r\n      return;\r\n    }\r\n\r\n    const code = document.getElementById(\"python-code\").value;\r\n    console.log(code, 'code');\r\n\r\n    outputRef.current.innerText = ''; \r\n    runPython(code, outputRef);\r\n  };\r\n\r\n  return (\r\n    <Slide className=\"python-compiler-slide\">\r\n      <textarea id=\"python-code\" defaultValue=\"print('Hello, World!')\" />\r\n      <button onClick={handleRunClick} >Run Python Code</button>\r\n      <pre ref={outputRef}></pre>\r\n      <canvas id=\"mycanvas\"></canvas>\r\n\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PythonCompilerSlide;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}