{"ast":null,"code":"var _jsxFileName = \"C:\\\\uplo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport OpeningSlide from './components/OpeningSlide';\nimport ImageSlide from './components/ImageSlide';\nimport ChartSlide from './components/ChartSlide';\nimport CodeBlockSlide from './components/CodeBlockSlide';\nimport PythonCompilerSlide from './components/PythonCompilerSlide';\nimport ClosingSlide from './components/ClosingSlide';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst slides = [/*#__PURE__*/_jsxDEV(OpeningSlide, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(ImageSlide, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(ChartSlide, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(CodeBlockSlide, {\n  code: `const greeting = \"Hello, World!\";\\nconsole.log(greeting);`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(PythonCompilerSlide, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(ClosingSlide, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this)];\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const nextSlide = () => {\n    if (currentSlide < slides.length - 1) setCurrentSlide(currentSlide + 1);\n  };\n  const toggleTheme = () => setIsDarkMode(!isDarkMode);\n  const prevSlide = () => {\n    if (currentSlide > 0) setCurrentSlide(currentSlide - 1);\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? \"dark\" : \"light\"}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      toggleTheme: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide-container\",\n      children: slides[currentSlide]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prevSlide,\n      disabled: currentSlide === 0,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextSlide,\n      disabled: currentSlide === slides.length - 1,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"47mG0R6dDRzfmgr+mQzLUg7fg8E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Footer","OpeningSlide","ImageSlide","ChartSlide","CodeBlockSlide","PythonCompilerSlide","ClosingSlide","jsxDEV","_jsxDEV","slides","fileName","_jsxFileName","lineNumber","columnNumber","code","App","_s","isDarkMode","setIsDarkMode","darkMode","setDarkMode","currentSlide","setCurrentSlide","nextSlide","length","toggleTheme","prevSlide","toggleDarkMode","className","children","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/uplo/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport OpeningSlide from './components/OpeningSlide';\nimport ImageSlide from './components/ImageSlide';\nimport ChartSlide from './components/ChartSlide';\nimport CodeBlockSlide from './components/CodeBlockSlide';\nimport PythonCompilerSlide from './components/PythonCompilerSlide';\nimport ClosingSlide from './components/ClosingSlide';\nimport './App.css';\nconst slides = [\n  <OpeningSlide />,\n  <ImageSlide />,\n  <ChartSlide />,\n  <CodeBlockSlide code={`const greeting = \"Hello, World!\";\\nconsole.log(greeting);`} />,\n  <PythonCompilerSlide />,\n  <ClosingSlide />,\n];\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const [darkMode, setDarkMode] = useState(false);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const nextSlide = () => {\n    if (currentSlide < slides.length - 1) setCurrentSlide(currentSlide + 1);\n  };\n  const toggleTheme = () => setIsDarkMode(!isDarkMode);\n\n  const prevSlide = () => {\n    if (currentSlide > 0) setCurrentSlide(currentSlide - 1);\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? \"dark\" : \"light\"}`}>\n      <Header toggleTheme={toggleTheme} />\n      <div className=\"slide-container\">{slides[currentSlide]}</div>\n      <button onClick={prevSlide} disabled={currentSlide === 0}>\n        Previous\n      </button>\n      <button onClick={nextSlide} disabled={currentSlide === slides.length - 1}>\n        Next\n      </button>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}